
input {

  file {
    type => "imedx1_access_log"
    path => "logs\imedx1.server.log"
    start_position => "beginning"
  }
  file {
    type => "imedx2_access_log"
    path => "logs\imedx2.server.log"
    start_position => "beginning"
  }
  file {
    type => "imedx3_access_log"
    path => "logs\imedx3.server.log"
    start_position => "beginning"
  }
}

filter {
    
    if [type] == "imedx1_access_log" {
            grok{
                    match => [ "message", "(?<session_id>[A-Z0-9]{32}-[a-z0-9]+\.[a-z0-9]+)" ]
                    remove_tag => ["_grokparsefailure"]
                    named_captures_only => true
            }
            grok{
                    match => [ "message", "%{WORD:method} %{URIPATH:request}" ]
                    remove_tag => ["_grokparsefailure"]
                    named_captures_only => true
            }

            grok{
                    match => [ "message", "%{NUMBER:duration}" ]
                    remove_tag => ["_grokparsefailure"]
                    named_captures_only => true
            }

    }
    if [type] == "imedx2_access_log" {
            grok{
                    match => [ "message", "(?<session_id>[A-Z0-9]{32}-[a-z0-9]+\.[a-z0-9]+)" ]
                    remove_tag => ["_grokparsefailure"]
                    named_captures_only => true
            }
            grok{
                    match => [ "message", "%{WORD:method} %{URIPATH:request}" ]
                    remove_tag => ["_grokparsefailure"]
                    named_captures_only => true
            }

            grok{
                    match => [ "message", "%{NUMBER:duration}" ]
                    remove_tag => ["_grokparsefailure"]
                    named_captures_only => true
            }

    }
    if [type] == "imedx3_access_log" {
            grok{
                    match => [ "message", "(?<session_id>[A-Z0-9]{32}-[a-z0-9]+\.[a-z0-9]+)" ]
                    remove_tag => ["_grokparsefailure"]
                    named_captures_only => true
            }
            grok{
                    match => [ "message", "%{WORD:method} %{URIPATH:request}" ]
                    remove_tag => ["_grokparsefailure"]
                    named_captures_only => true
            }

            grok{
                    match => [ "message", "%{NUMBER:duration}" ]
                    remove_tag => ["_grokparsefailure"]
                    named_captures_only => true
            }

    }
}

output {
  elasticsearch { 
    hosts => ["elasticsearch:9200"]
  }
}